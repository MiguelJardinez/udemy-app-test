{"version":3,"file":"static/webpack/static/development/pages/_app.js.7e7c0940015c2c1ecf91.hot-update.js","sources":["webpack:///./node_modules/node-fetch/browser.js","webpack:///./pages/_app.js"],"sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import App from 'next/app';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react'\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport '../styles/tailwind.css';\nglobal.fetch = require('node-fetch');\n\nimport {Provider as ReduxProvider} from 'react-redux';\nimport store from '../redux/store';\n\nconst client = new ApolloClient({\n    fetchOptions: {\n        credentials: 'include'\n    }\n});\n\n\nclass MyApp extends App {\n    render() {\n        const { Component, pageProps } = this.props;\n        const config = { apiKey: API_KEY, shopOrigin: Cookies.get('shopOrigin'), forceRedirect: true }\n\n        return (\n            <React.Fragment>\n                <Head>\n                    <title>Sample App</title>\n                    <meta charSet=\"utf-8\" />\n                </Head>\n                        <ReduxProvider store={store}>\n                <Provider config={config}>\n                    <AppProvider i18n={translations}>\n                            <ApolloProvider client={client}>\n                                <Component {...pageProps} />\n                            </ApolloProvider>\n                    </AppProvider>\n                </Provider>\n                        </ReduxProvider>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MyApp;"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AADA;AADA;AACA;AAMA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;;;;AAtBA;AACA;AAwBA;;;;;A","sourceRoot":""}