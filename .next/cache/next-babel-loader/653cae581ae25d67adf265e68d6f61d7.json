{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { CHANGE_CONDITIONS, CHANGE_CONDITIONS_FAILURE, CHANGE_CONDITIONS_SUCCESS } from '../../types';\nimport axios from 'axios';\nexport var changeConditionsAction = function changeConditionsAction(data) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch(changeConditionals());\n            _context.prev = 1;\n            console.log('Cambiando la data', data);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post('/api/conditions', data));\n\n          case 5:\n            dispatch(changeConditionalsSuccess(data));\n            _context.next = 13;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            console.log('Hubo un error en la accion de los condicionales');\n            dispatch(changeConditionalsError());\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], _Promise);\n  };\n};\n\nvar changeConditionals = function changeConditionals() {\n  return {\n    type: CHANGE_CONDITIONS\n  };\n};\n\nvar changeConditionalsSuccess = function changeConditionalsSuccess(data) {\n  return {\n    type: CHANGE_CONDITIONS_SUCCESS,\n    payload: data\n  };\n};\n\nvar changeConditionalsError = function changeConditionalsError() {\n  return {\n    type: CHANGE_CONDITIONS_FAILURE\n  };\n};","map":null,"metadata":{},"sourceType":"module"}