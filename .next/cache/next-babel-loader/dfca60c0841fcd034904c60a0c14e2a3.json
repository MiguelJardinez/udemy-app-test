{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ResourceListWithProducts() {\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"These are the products selected\"), data.nodes.Product.map(function (item) {\n    __jsx(\"h1\", null, item.title);\n  }));\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/iskandarkurbanov/Desktop/script-tag-app/components/ResourceList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","loading","error","data","message","nodes","Product","map","item","title"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AA4BA,SAASS,wBAAT,GAAoC;AAAA,kBAEDR,QAAQ,CAACO,kBAAD,CAFP;AAAA,MAEzBE,OAFyB,aAEzBA,OAFyB;AAAA,MAEhBC,KAFgB,aAEhBA,KAFgB;AAAA,MAETC,IAFS,aAETA,IAFS;;AAIhC,MAAGF,OAAH,EAAY,OAAO,gCAAP;AACZ,MAAGC,KAAH,EAAU,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEV,SACI,mBACI,oDADJ,EAGQD,IAAI,CAACE,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI,EAAI;AAC3B,sBACKA,IAAI,CAACC,KADV;AAGH,GAJD,CAHR,CADJ;AAYH;;AAED,eAAeT,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ResourceListWithProducts() {\n\n    const {loading, error, data} = useQuery(GET_PRODUCTS_BY_ID)\n\n    if(loading) return <div>Loading...</div>;\n    if(error) return <div>{error.message}</div>\n\n    return (\n        <div>\n            <h1>These are the products selected</h1>\n            {\n                data.nodes.Product.map(item => {\n                    <h1>\n                        {item.title}\n                    </h1>\n                })\n            }\n        </div>\n    )\n}\n\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}