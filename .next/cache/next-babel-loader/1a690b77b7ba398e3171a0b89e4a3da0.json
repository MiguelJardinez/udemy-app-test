{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Switch from 'react-ios-switch';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeConditionsAction } from '../../redux/actions/conditionals/changeConditionals';\n\nconst ConditionsGlobalId = () => {\n  var _userInfo$user, _userInfo$user2, _userInfo$user2$setti, _userInfo$user3, _userInfo$user4, _userInfo$user4$setti;\n\n  const dispatch = useDispatch();\n  const userInfo = useSelector(state => state.user);\n  const settingsUser = userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$user = userInfo.user) === null || _userInfo$user === void 0 ? void 0 : _userInfo$user.settings;\n  console.log(settingsUser);\n\n  const handleChangeconditions = dataChange => {\n    dispatch(changeConditionsAction(dataChange));\n  };\n\n  return __jsx(\"div\", {\n    className: \"pb-10 pl-20\"\n  }, __jsx(\"div\", {\n    className: \"flex justify-between my-10 items-center\"\n  }, __jsx(\"h4\", {\n    className: \"text-2xl w-11/12 pr-10\"\n  }, \"Require ID verification for orders when \", __jsx(\"b\", null, \"Billing Address\"), \" does not match \", __jsx(\"b\", null, \"Shipping Address?\")), __jsx(Switch, {\n    onChange: () => handleChangeconditions(_objectSpread({}, settingsUser, {\n      address: !settingsUser.address\n    })),\n    checked: userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$user2 = userInfo.user) === null || _userInfo$user2 === void 0 ? void 0 : (_userInfo$user2$setti = _userInfo$user2.settings) === null || _userInfo$user2$setti === void 0 ? void 0 : _userInfo$user2$setti.address,\n    onColor: \"#0D51FF\"\n  })), __jsx(\"div\", {\n    className: \"flex justify-between my-10 items-center\"\n  }, __jsx(\"div\", {\n    className: \"flex items-center\"\n  }, __jsx(\"h4\", {\n    className: \"text-2xl\"\n  }, \"Require ID verification for orders above $ \"), __jsx(\"input\", {\n    onChange: () => console.log('Cambiando el valor del monto máximo'),\n    value: userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$user3 = userInfo.user) === null || _userInfo$user3 === void 0 ? void 0 : _userInfo$user3.limit_ammount.toString(),\n    className: \"w-24 border-2 border-blue-500 text-blue-500 text-center py-2 rounded-lg ml-3 font-semibold\"\n  })), __jsx(Switch, {\n    onChange: () => handleChangeconditions(_objectSpread({}, settingsUser, {\n      ammount: !settingsUser.ammount\n    })),\n    checked: userInfo === null || userInfo === void 0 ? void 0 : (_userInfo$user4 = userInfo.user) === null || _userInfo$user4 === void 0 ? void 0 : (_userInfo$user4$setti = _userInfo$user4.settings) === null || _userInfo$user4$setti === void 0 ? void 0 : _userInfo$user4$setti.ammount,\n    onColor: \"#0D51FF\"\n  })));\n};\n\nexport default ConditionsGlobalId;","map":{"version":3,"sources":["/Users/miguel_jardinez/Desktop/shopify-script-tag-app-master/components/Settings/ConditionsGlobalId.tsx"],"names":["Switch","useSelector","useDispatch","changeConditionsAction","ConditionsGlobalId","dispatch","userInfo","state","user","settingsUser","settings","console","log","handleChangeconditions","dataChange","address","limit_ammount","toString","ammount"],"mappings":";;;;;;;;;AACA,OAAOA,MAAP,MAAmB,kBAAnB;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,sBAAR,QAAqC,qDAArC;;AAOA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAgBA,KAAK,CAACC,IAAvB,CAA5B;AACA,QAAMC,YAAY,GAAGH,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAEE,IAAb,mDAAG,eAAgBE,QAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AAEA,QAAMI,sBAAsB,GAAIC,UAAD,IAAgC;AAC7DT,IAAAA,QAAQ,CAACF,sBAAsB,CAACW,UAAD,CAAvB,CAAR;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,iDAC2C,mCAD3C,sBACiF,qCADjF,CADF,EAIE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,MAAMD,sBAAsB,mBAAKJ,YAAL;AAAmBM,MAAAA,OAAO,EAAE,CAACN,YAAY,CAACM;AAA1C,OADxC;AAEE,IAAA,OAAO,EAAET,QAAF,aAAEA,QAAF,0CAAEA,QAAQ,CAAEE,IAAZ,6EAAE,gBAAgBE,QAAlB,0DAAE,sBAA0BK,OAFrC;AAGE,IAAA,OAAO,EAAC;AAHV,IAJF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,mDADF,EAEE;AACE,IAAA,QAAQ,EAAE,MAAMJ,OAAO,CAACC,GAAR,CAAY,qCAAZ,CADlB;AAEE,IAAA,KAAK,EAAEN,QAAF,aAAEA,QAAF,0CAAEA,QAAQ,CAAEE,IAAZ,oDAAE,gBAAgBQ,aAAhB,CAA8BC,QAA9B,EAFT;AAGE,IAAA,SAAS,EAAC;AAHZ,IAFF,CADF,EASE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,MAAMJ,sBAAsB,mBAAKJ,YAAL;AAAmBS,MAAAA,OAAO,EAAE,CAACT,YAAY,CAACS;AAA1C,OADxC;AAEE,IAAA,OAAO,EAAEZ,QAAF,aAAEA,QAAF,0CAAEA,QAAQ,CAAEE,IAAZ,6EAAE,gBAAgBE,QAAlB,0DAAE,sBAA0BQ,OAFrC;AAGE,IAAA,OAAO,EAAC;AAHV,IATF,CAXF,CADF;AA6BD,CAvCD;;AAyCA,eAAed,kBAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport Switch from 'react-ios-switch';\nimport axios from 'axios';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {changeConditionsAction} from '../../redux/actions/conditionals/changeConditionals';\n\ninterface IContitionAuth {\n  address: boolean;\n  ammount: boolean;\n}\n\nconst ConditionsGlobalId = () => {\n  const dispatch = useDispatch();\n  const userInfo = useSelector((state: any) => state.user);\n  const settingsUser = userInfo?.user?.settings;\n  console.log(settingsUser);\n\n  const handleChangeconditions = (dataChange: IContitionAuth) => {\n    dispatch(changeConditionsAction(dataChange));\n  };\n\n  return (\n    <div className=\"pb-10 pl-20\">\n      <div className=\"flex justify-between my-10 items-center\">\n        <h4 className=\"text-2xl w-11/12 pr-10\"\n          >Require ID verification for orders when <b>Billing Address</b> does not match <b>Shipping Address?</b>\n        </h4>\n        <Switch\n          onChange={() => handleChangeconditions({...settingsUser, address: !settingsUser.address})}\n          checked={userInfo?.user?.settings?.address}\n          onColor=\"#0D51FF\"\n        />\n      </div>\n      <div className=\"flex justify-between my-10 items-center\">\n        <div className=\"flex items-center\">\n          <h4 className=\"text-2xl\">Require ID verification for orders above $ </h4> \n          <input\n            onChange={() => console.log('Cambiando el valor del monto máximo')}\n            value={userInfo?.user?.limit_ammount.toString()}\n            className=\"w-24 border-2 border-blue-500 text-blue-500 text-center py-2 rounded-lg ml-3 font-semibold\"\n          />\n        </div>\n        <Switch\n          onChange={() => handleChangeconditions({...settingsUser, ammount: !settingsUser.ammount})}\n          checked={userInfo?.user?.settings?.ammount}\n          onColor=\"#0D51FF\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ConditionsGlobalId\n"]},"metadata":{},"sourceType":"module"}