{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_USER_INFO, GET_USER_INFO_SUCCESS, GET_USER_INFO_FAILURE, CHANGE_CONDITIONS, CHANGE_CONDITIONS_SUCCESS, CHANGE_CONDITIONS_FAILURE, SAVE_GLOBAL_STATE, SAVE_GLOBAL_STATE_SUCCESS, SAVE_GLOBAL_STATE_FAILURE, CHANGE_SHOP_NAME, CHANGE_AMMOUNT, CHANGE_CLIENT_GLOBALID } from '../../types';\nconst initialState = {\n  user: null,\n  error: false,\n  loading: false,\n  isChanged: false\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case SAVE_GLOBAL_STATE:\n    case CHANGE_CONDITIONS:\n    case GET_USER_INFO:\n      return _objectSpread({}, state, {\n        loading: true,\n        error: false\n      });\n\n    case GET_USER_INFO_SUCCESS:\n      return _objectSpread({}, state, {\n        user: payload,\n        loading: false,\n        error: false\n      });\n\n    case CHANGE_CONDITIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          settings: payload\n        }),\n        isChanged: true\n      });\n\n    case SAVE_GLOBAL_STATE_SUCCESS:\n      return _objectSpread({}, state, {\n        user: payload,\n        isChanged: false\n      });\n\n    case CHANGE_SHOP_NAME:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          shop_name: payload\n        }),\n        isChanged: true\n      });\n\n    case CHANGE_AMMOUNT:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          limit_ammount: payload\n        }),\n        isChanged: true\n      });\n\n    case CHANGE_CLIENT_GLOBALID:\n      return _objectSpread({}, state, {\n        user: _objectSpread({}, state.user, {\n          global_client_id: payload\n        }),\n        isChanged: true\n      });\n\n    case SAVE_GLOBAL_STATE_FAILURE:\n    case CHANGE_CONDITIONS_FAILURE:\n    case GET_USER_INFO_FAILURE:\n      return _objectSpread({}, state, {\n        error: true,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}