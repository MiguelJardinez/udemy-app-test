{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!) {\n        scriptTagCreate(input: $input) {\n            scriptTag {\n                id\n            }\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\nconst QUERY_SCRIPTTAGS = gql`\n    query {\n        scriptTags(first: 5) {\n            edges {\n                node {\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\n\nfunction ScriptPage() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_SCRIPTTAGS);\n  if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log('this is script data', data);\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"These are the script tags right now:\"), data.scriptTags.edges.map(item => {\n    return __jsx(\"div\", {\n      key: item.node.id\n    }, __jsx(\"p\", null, item.node.id));\n  }));\n}\n\nexport default ScriptPage;","map":{"version":3,"sources":["/Users/iskandarkurbanov/Desktop/script-tag-app/pages/script-page.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","ScriptPage","loading","error","data","message","console","log","scriptTags","edges","map","item","node","id"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AAGA,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMI,gBAAgB,GAAGJ,GAAI;;;;;;;;;;;;CAA7B;;AAeA,SAASK,UAAT,GAAsB;AAElB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,gBAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO,mCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCH,IAAlC;AAEA,SACI,mBACI,yDADJ,EAGKA,IAAI,CAACI,UAAL,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BC,IAAI,IAAI;AAE/B,WACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAL,CAAUC;AAApB,OACI,iBAAIF,IAAI,CAACC,IAAL,CAAUC,EAAd,CADJ,CADJ;AAKH,GAPA,CAHL,CADJ;AAcH;;AAED,eAAeZ,UAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\n\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!) {\n        scriptTagCreate(input: $input) {\n            scriptTag {\n                id\n            }\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\n\nconst QUERY_SCRIPTTAGS = gql`\n    query {\n        scriptTags(first: 5) {\n            edges {\n                node {\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\n\n\nfunction ScriptPage() {\n\n    const { loading, error, data } = useQuery(QUERY_SCRIPTTAGS)\n\n    if (loading) return <div>Loadingâ€¦</div>;\n    if (error) return <div>{error.message}</div>;\n\n    console.log('this is script data',data)\n\n    return (\n        <div>\n            <h1>These are the script tags right now:</h1>\n\n            {data.scriptTags.edges.map(item => {\n\n                return (\n                    <div key={item.node.id}>\n                        <p>{item.node.id}</p>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ScriptPage;"]},"metadata":{},"sourceType":"module"}