{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport { GET_USER_INFO, GET_USER_INFO_SUCCESS, GET_USER_INFO_FAILURE } from '../../types/';\nimport axios from 'axios';\nexport var getUSerInfoAction = function getUSerInfoAction() {\n  return function _callee(dispatch) {\n    var result;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            dispatch(getUserInfo());\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get('/api/conditions'));\n\n          case 4:\n            result = _context.sent;\n            dispatch(getUserInfoSuccess(result.data.data));\n            _context.next = 13;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            console.log('Hubo un error en la accion de obtener usuario');\n            dispatch(getUserInfoFailure());\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], _Promise);\n  };\n};\n\nvar getUserInfo = function getUserInfo() {\n  return {\n    type: GET_USER_INFO\n  };\n};\n\nvar getUserInfoSuccess = function getUserInfoSuccess(data) {\n  return {\n    type: GET_USER_INFO_SUCCESS,\n    payload: data\n  };\n};\n\nvar getUserInfoFailure = function getUserInfoFailure() {\n  return {\n    type: GET_USER_INFO_FAILURE\n  };\n};","map":null,"metadata":{},"sourceType":"module"}