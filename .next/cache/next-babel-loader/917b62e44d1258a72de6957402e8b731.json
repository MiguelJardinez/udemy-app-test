{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log('this is data', data);\n  return __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Product',\n      plural: 'Products'\n    },\n    items: data.nodes,\n    renderItem: function renderItem(item) {\n      var media = __jsx(Thumbnail, {\n        source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n        alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n      });\n\n      var price = item.variants.edges[0].node.price;\n      return __jsx(ResourceList.Item, {\n        id: item.id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(item.title)\n      }, __jsx(Stack, null, __jsx(Stack.Item, {\n        fill: true\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price))));\n    }\n  }));\n}\n\nexport default ProductList;","map":{"version":3,"sources":["/Users/iskandarkurbanov/Desktop/script-tag-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","variables","ids","get","loading","error","data","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AA4BA,SAASS,WAAT,GAAuB;AAAA,kBAEcR,QAAQ,CAACO,kBAAD,EAAqB;AAAEE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAFtB;AAAA,MAEXC,OAFW,aAEXA,OAFW;AAAA,MAEFC,KAFE,aAEFA,KAFE;AAAA,MAEKC,IAFL,aAEKA,IAFL;;AAInB,MAAIF,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,IAA5B;AAEA,SACI,MAAC,IAAD,QACI,MAAC,YAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,YAAY,EAAE;AAAEI,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAFlB;AAGI,IAAA,KAAK,EAAEL,IAAI,CAACM,KAHhB;AAII,IAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAChB,UAAMC,KAAK,GACP,MAAC,SAAD;AACI,QAAA,MAAM,EACFD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACMH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WADhC,GAEM,EAJd;AAMI,QAAA,GAAG,EACCL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACMH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OADhC,GAEM;AATd,QADJ;;AAcA,UAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,aACI,MAAC,YAAD,CAAc,IAAd;AACI,QAAA,EAAE,EAAEP,IAAI,CAACS,EADb;AAEI,QAAA,KAAK,EAAER,KAFX;AAGI,QAAA,kBAAkB,6BAAsBD,IAAI,CAACU,KAA3B;AAHtB,SAKI,MAAC,KAAD,QACI,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI;AAAhB,SACI,kBACI,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACKV,IAAI,CAACU,KADV,CADJ,CADJ,CADJ,EAQI,MAAC,KAAD,CAAO,IAAP,QACI,sBAAKH,KAAL,CADJ,CARJ,CALJ,CADJ;AAoBH;AAxCL,IADJ,CADJ;AA8CH;;AAED,eAAepB,WAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction ProductList() {\n\n    const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } })\n\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>{error.message}</div>\n\n    console.log('this is data', data)\n\n    return (\n        <Card>\n            <ResourceList\n                showHeader\n                resourceName={{ singular: 'Product', plural: 'Products' }}\n                items={data.nodes}\n                renderItem={item => {\n                    const media = (\n                        <Thumbnail\n                            source={\n                                item.images.edges[0]\n                                    ? item.images.edges[0].node.originalSrc\n                                    : ''\n                            }\n                            alt={\n                                item.images.edges[0]\n                                    ? item.images.edges[0].node.altText\n                                    : ''\n                            }\n                        />\n                    );\n                    const price = item.variants.edges[0].node.price;\n                    return (\n                        <ResourceList.Item\n                            id={item.id}\n                            media={media}\n                            accessibilityLabel={`View details for ${item.title}`}\n                        >\n                            <Stack>\n                                <Stack.Item fill>\n                                    <h3>\n                                        <TextStyle variation=\"strong\">\n                                            {item.title}\n                                        </TextStyle>\n                                    </h3>\n                                </Stack.Item>\n                                <Stack.Item>\n                                    <p>${price}</p>\n                                </Stack.Item>\n                            </Stack>\n                        </ResourceList.Item>\n                    );\n                }}\n            />\n        </Card>\n    )\n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}