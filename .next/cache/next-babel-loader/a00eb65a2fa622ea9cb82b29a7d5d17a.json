{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Switch from 'react-ios-switch';\nimport axios from 'axios';\n\nconst ConditionsGlobalId = () => {\n  const {\n    0: conditionAuth,\n    1: setConditionAuth\n  } = useState({\n    address: false,\n    ammount: false\n  });\n  useEffect(() => {\n    const changeConditions = async () => {\n      try {\n        const result = await (await axios.get('/api/conditions')).data;\n        console.log(result.settings);\n        setConditionAuth(result.settings);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    changeConditions();\n  }, []);\n\n  const handleChangeConditionsAddress = async condition => {\n    const valor = _objectSpread({}, conditionAuth, {\n      address: condition\n    });\n\n    try {\n      await axios.post('/api/conditions', valor);\n      setConditionAuth(_objectSpread({}, conditionAuth, {\n        address: condition\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChangeConditionsAmmount = async condition => {\n    const valor = _objectSpread({}, conditionAuth, {\n      ammount: condition\n    });\n\n    try {\n      await axios.post('/api/conditions', valor);\n      setConditionAuth(_objectSpread({}, conditionAuth, {\n        ammount: condition\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"pb-10 pl-20\"\n  }, __jsx(\"div\", {\n    className: \"flex justify-between my-10 items-center\"\n  }, __jsx(\"h4\", {\n    className: \"text-2xl w-11/12 pr-10\"\n  }, \"Require ID verification for orders when \", __jsx(\"b\", null, \"Billing Address\"), \" does not match \", __jsx(\"b\", null, \"Shipping Address?\")), __jsx(Switch, {\n    onChange: () => handleChangeConditionsAddress(!conditionAuth.address),\n    checked: conditionAuth.address,\n    onColor: \"#0D51FF\"\n  })), __jsx(\"div\", {\n    className: \"flex justify-between my-10 items-center\"\n  }, __jsx(\"h4\", {\n    className: \"text-2xl\"\n  }, \"Require ID verification for orders above $\", __jsx(\"span\", {\n    className: \"border-2 border-blue-500 text-blue-500 px-5 py-2 rounded-lg ml-3 font-semibold\"\n  }, \"100\")), __jsx(Switch, {\n    onChange: () => handleChangeConditionsAmmount(!conditionAuth.ammount),\n    checked: conditionAuth.ammount,\n    onColor: \"#0D51FF\"\n  })));\n};\n\nexport default ConditionsGlobalId;","map":{"version":3,"sources":["/Users/miguel_jardinez/Desktop/shopify-script-tag-app-master/components/Settings/ConditionsGlobalId.tsx"],"names":["useState","useEffect","Switch","axios","ConditionsGlobalId","conditionAuth","setConditionAuth","address","ammount","changeConditions","result","get","data","console","log","settings","error","handleChangeConditionsAddress","condition","valor","post","handleChangeConditionsAmmount"],"mappings":";;;;;;;;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAOA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCN,QAAQ,CAAiB;AACjEO,IAAAA,OAAO,EAAE,KADwD;AAEjEC,IAAAA,OAAO,EAAE;AAFwD,GAAjB,CAAlD;AAKAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAMC,MAAM,GAAI,MAAM,CAAC,MAAMP,KAAK,CAACQ,GAAN,CAAU,iBAAV,CAAP,EAAqCC,IAA3D;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,QAAnB;AACAT,QAAAA,gBAAgB,CAACI,MAAM,CAACK,QAAR,CAAhB;AACD,OAJD,CAIE,OAAOC,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,KARD;;AASAP,IAAAA,gBAAgB;AACjB,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMQ,6BAA6B,GAAI,MAAOC,SAAP,IAA8B;AACnE,UAAMC,KAAK,qBACNd,aADM;AAETE,MAAAA,OAAO,EAAEW;AAFA,MAAX;;AAIA,QAAI;AACF,YAAMf,KAAK,CAACiB,IAAN,CAAW,iBAAX,EAA8BD,KAA9B,CAAN;AACAb,MAAAA,gBAAgB,mBAAKD,aAAL;AAAoBE,QAAAA,OAAO,EAAEW;AAA7B,SAAhB;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,GAXD;;AAaC,QAAMK,6BAA6B,GAAI,MAAOH,SAAP,IAA8B;AACpE,UAAMC,KAAK,qBACNd,aADM;AAETG,MAAAA,OAAO,EAAEU;AAFA,MAAX;;AAIA,QAAI;AACF,YAAMf,KAAK,CAACiB,IAAN,CAAW,iBAAX,EAA8BD,KAA9B,CAAN;AACAb,MAAAA,gBAAgB,mBAAKD,aAAL;AAAoBG,QAAAA,OAAO,EAAEU;AAA7B,SAAhB;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,GAXA;;AAaD,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,iDAC2C,mCAD3C,sBACiF,qCADjF,CADF,EAIE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,MAAMC,6BAA6B,CAAC,CAACZ,aAAa,CAACE,OAAhB,CAD/C;AAEE,IAAA,OAAO,EAAEF,aAAa,CAACE,OAFzB;AAGE,IAAA,OAAO,EAAC;AAHV,IAJF,CADF,EAWE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,mDAEI;AAAM,IAAA,SAAS,EAAC;AAAhB,WAFJ,CADF,EAME,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,MAAMc,6BAA6B,CAAC,CAAChB,aAAa,CAACG,OAAhB,CAD/C;AAEE,IAAA,OAAO,EAAEH,aAAa,CAACG,OAFzB;AAGE,IAAA,OAAO,EAAC;AAHV,IANF,CAXF,CADF;AA0BD,CAvED;;AAyEA,eAAeJ,kBAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport Switch from 'react-ios-switch';\nimport axios from 'axios';\n\ninterface IContitionAuth {\n  address: boolean;\n  ammount: boolean;\n}\n\nconst ConditionsGlobalId = () => {\n  const [conditionAuth, setConditionAuth] = useState<IContitionAuth>({\n    address: false,\n    ammount: false\n  });\n \n  useEffect(() => {\n    const changeConditions = async () => {\n      try {\n        const result = (await (await axios.get('/api/conditions')).data);\n        console.log(result.settings);\n        setConditionAuth(result.settings);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    changeConditions();\n  }, []);\n\n  const handleChangeConditionsAddress =  async (condition: boolean) => {\n    const valor = {\n      ...conditionAuth,\n      address: condition,\n    };\n    try {\n      await axios.post('/api/conditions', valor);\n      setConditionAuth({...conditionAuth, address: condition});\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n   const handleChangeConditionsAmmount =  async (condition: boolean) => {\n    const valor = {\n      ...conditionAuth,\n      ammount: condition,\n    };\n    try {\n      await axios.post('/api/conditions', valor);\n      setConditionAuth({...conditionAuth, ammount: condition});\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"pb-10 pl-20\">\n      <div className=\"flex justify-between my-10 items-center\">\n        <h4 className=\"text-2xl w-11/12 pr-10\"\n          >Require ID verification for orders when <b>Billing Address</b> does not match <b>Shipping Address?</b>\n        </h4>\n        <Switch\n          onChange={() => handleChangeConditionsAddress(!conditionAuth.address)}\n          checked={conditionAuth.address}\n          onColor=\"#0D51FF\"\n        />\n      </div>\n      <div className=\"flex justify-between my-10 items-center\">\n        <h4 className=\"text-2xl\"\n          >Require ID verification for orders above $ \n            <span className=\"border-2 border-blue-500 text-blue-500 px-5 py-2 rounded-lg ml-3 font-semibold\"\n              >100</span>\n        </h4> \n        <Switch\n          onChange={() => handleChangeConditionsAmmount(!conditionAuth.ammount)}\n          checked={conditionAuth.ammount}\n          onColor=\"#0D51FF\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ConditionsGlobalId\n"]},"metadata":{},"sourceType":"module"}